// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: scheduler.proto
// Protobuf C++ Version: 5.27.3

#include "scheduler.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace scheduler {

inline constexpr VehicleSchedulingRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : roadsideid_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        areaid_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR VehicleSchedulingRequest::VehicleSchedulingRequest(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct VehicleSchedulingRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR VehicleSchedulingRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~VehicleSchedulingRequestDefaultTypeInternal() {}
  union {
    VehicleSchedulingRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 VehicleSchedulingRequestDefaultTypeInternal _VehicleSchedulingRequest_default_instance_;
}  // namespace scheduler
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_scheduler_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_scheduler_2eproto = nullptr;
const ::uint32_t
    TableStruct_scheduler_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::scheduler::VehicleSchedulingRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::scheduler::VehicleSchedulingRequest, _impl_.areaid_),
        PROTOBUF_FIELD_OFFSET(::scheduler::VehicleSchedulingRequest, _impl_.roadsideid_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::scheduler::VehicleSchedulingRequest)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::scheduler::_VehicleSchedulingRequest_default_instance_._instance,
};
const char descriptor_table_protodef_scheduler_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\017scheduler.proto\022\tscheduler\">\n\030VehicleS"
    "chedulingRequest\022\016\n\006areaId\030\001 \001(\r\022\022\n\nroad"
    "sideId\030\002 \001(\tb\006proto3"
};
static ::absl::once_flag descriptor_table_scheduler_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_scheduler_2eproto = {
    false,
    false,
    100,
    descriptor_table_protodef_scheduler_2eproto,
    "scheduler.proto",
    &descriptor_table_scheduler_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_scheduler_2eproto::offsets,
    file_level_enum_descriptors_scheduler_2eproto,
    file_level_service_descriptors_scheduler_2eproto,
};
namespace scheduler {
// ===================================================================

class VehicleSchedulingRequest::_Internal {
 public:
};

VehicleSchedulingRequest::VehicleSchedulingRequest(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:scheduler.VehicleSchedulingRequest)
}
inline PROTOBUF_NDEBUG_INLINE VehicleSchedulingRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::scheduler::VehicleSchedulingRequest& from_msg)
      : roadsideid_(arena, from.roadsideid_),
        _cached_size_{0} {}

VehicleSchedulingRequest::VehicleSchedulingRequest(
    ::google::protobuf::Arena* arena,
    const VehicleSchedulingRequest& from)
    : ::google::protobuf::Message(arena) {
  VehicleSchedulingRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.areaid_ = from._impl_.areaid_;

  // @@protoc_insertion_point(copy_constructor:scheduler.VehicleSchedulingRequest)
}
inline PROTOBUF_NDEBUG_INLINE VehicleSchedulingRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : roadsideid_(arena),
        _cached_size_{0} {}

inline void VehicleSchedulingRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.areaid_ = {};
}
VehicleSchedulingRequest::~VehicleSchedulingRequest() {
  // @@protoc_insertion_point(destructor:scheduler.VehicleSchedulingRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void VehicleSchedulingRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.roadsideid_.Destroy();
  _impl_.~Impl_();
}

const ::google::protobuf::MessageLite::ClassData*
VehicleSchedulingRequest::GetClassData() const {
  PROTOBUF_CONSTINIT static const ::google::protobuf::MessageLite::
      ClassDataFull _data_ = {
          {
              &_table_.header,
              nullptr,  // OnDemandRegisterArenaDtor
              nullptr,  // IsInitialized
              PROTOBUF_FIELD_OFFSET(VehicleSchedulingRequest, _impl_._cached_size_),
              false,
          },
          &VehicleSchedulingRequest::MergeImpl,
          &VehicleSchedulingRequest::kDescriptorMethods,
          &descriptor_table_scheduler_2eproto,
          nullptr,  // tracker
      };
  ::google::protobuf::internal::PrefetchToLocalCache(&_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_data_.tc_table);
  return _data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 53, 2> VehicleSchedulingRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_VehicleSchedulingRequest_default_instance_._instance,
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::scheduler::VehicleSchedulingRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string roadsideId = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(VehicleSchedulingRequest, _impl_.roadsideid_)}},
    // uint32 areaId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(VehicleSchedulingRequest, _impl_.areaid_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(VehicleSchedulingRequest, _impl_.areaid_)}},
  }}, {{
    65535, 65535
  }}, {{
    // uint32 areaId = 1;
    {PROTOBUF_FIELD_OFFSET(VehicleSchedulingRequest, _impl_.areaid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // string roadsideId = 2;
    {PROTOBUF_FIELD_OFFSET(VehicleSchedulingRequest, _impl_.roadsideid_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\42\0\12\0\0\0\0\0"
    "scheduler.VehicleSchedulingRequest"
    "roadsideId"
  }},
};

PROTOBUF_NOINLINE void VehicleSchedulingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:scheduler.VehicleSchedulingRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.roadsideid_.ClearToEmpty();
  _impl_.areaid_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

::uint8_t* VehicleSchedulingRequest::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:scheduler.VehicleSchedulingRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // uint32 areaId = 1;
  if (this->_internal_areaid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
        1, this->_internal_areaid(), target);
  }

  // string roadsideId = 2;
  if (!this->_internal_roadsideid().empty()) {
    const std::string& _s = this->_internal_roadsideid();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "scheduler.VehicleSchedulingRequest.roadsideId");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:scheduler.VehicleSchedulingRequest)
  return target;
}

::size_t VehicleSchedulingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:scheduler.VehicleSchedulingRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(reinterpret_cast<const void*>(this));
  // string roadsideId = 2;
  if (!this->_internal_roadsideid().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_roadsideid());
  }

  // uint32 areaId = 1;
  if (this->_internal_areaid() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
        this->_internal_areaid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}


void VehicleSchedulingRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<VehicleSchedulingRequest*>(&to_msg);
  auto& from = static_cast<const VehicleSchedulingRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:scheduler.VehicleSchedulingRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_roadsideid().empty()) {
    _this->_internal_set_roadsideid(from._internal_roadsideid());
  }
  if (from._internal_areaid() != 0) {
    _this->_impl_.areaid_ = from._impl_.areaid_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void VehicleSchedulingRequest::CopyFrom(const VehicleSchedulingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:scheduler.VehicleSchedulingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void VehicleSchedulingRequest::InternalSwap(VehicleSchedulingRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.roadsideid_, &other->_impl_.roadsideid_, arena);
        swap(_impl_.areaid_, other->_impl_.areaid_);
}

::google::protobuf::Metadata VehicleSchedulingRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace scheduler
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_scheduler_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
